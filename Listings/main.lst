C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\KEIL5_MDK\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ma
                    -in.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>
   3          #include"LCD1602.h"   //LCD1602液晶头文件
   4          #include"ds18b20.h"     ///ds18b20头文件
   5          #include "eeprom52.h" 
   6          
   7          #define uint unsigned int
   8          #define uchar unsigned char
   9          
  10          
  11          uchar set_flag;  //设置标志
  12          
  13          uchar alarmMax_flag;alarmMin_flag;  //报警标志
  14          uchar beep_flag;   //蜂鸣标志     
  15          uchar j=0; 
  16          uchar alarm_flag;
  17          
  18          sbit beep=P3^6;  //蜂鸣器
  19          sbit SET_key=P1^5;  //设置键
  20          sbit ADD_key=P1^6;  //加键
  21          sbit DEC_key=P1^7;  //减键
  22          sbit Feng=P3^4;//风扇继电器
  23          sbit Jiare=P3^5; //加热继电器
  24          uchar ds18b20RT[7] ;  //十位 个位 小数点 十分位 百分位
  25          uchar wendu_s[3];
  26          uchar wendu_x[3];
  27          uchar ds18b20[1];
  28          uchar wendus[1];
  29          uchar wendux[1];
  30          
  31          
  32          
  33          void jiemian();
  34          void jiemian1();
  35          void key();
  36          void wendu_ds();
  37          
  38          
  39          
  40          void delay_ms(uchar z)
  41          {
  42   1        uchar i,j;
  43   1          for(i=z;i>0;i--)
  44   1            for(j=120;j>0;j--);
  45   1      }
  46          
  47          
  48          
  49          void wendu_ds() //显示格式化的温度上限和下限 用于显示
  50          {
  51   1        read_eeprom();
  52   1        wendu_s[0]=wen_ds/10+0x30;
  53   1        wendu_s[1]=wen_ds%10+0x30;
  54   1        wendu_s[2]='\0';
C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 2   

  55   1        wendu_x[0]=wen_dx/10+0x30;
  56   1        wendu_x[1]=wen_dx%10+0x30;
  57   1        wendu_x[2]='\0';
  58   1        wendus[0]=wen_ds;
  59   1        wendux[0]=wen_dx;
  60   1        LCD1602_Print(5,1,&wendu_s); 
  61   1        LCD1602_Print(13,1,&wendu_x); 
  62   1      }
  63          
  64          void Ds18b20Read(void)    //显示温度
  65          {
  66   1          ReadTemperature();
  67   1          ds18b20RT[0]=sdata/10+0x30;
  68   1          ds18b20RT[1]=sdata%10+0x30;
  69   1          ds18b20RT[2]='.';
  70   1          ds18b20RT[3]=xiaoshu1+0x30;
  71   1          ds18b20RT[4]=xiaoshu2+0x30;
  72   1          ds18b20RT[5]='C';
  73   1          ds18b20RT[6]='\0';
  74   1          ds18b20[0]=sdata;
  75   1          LCD1602_Print(10,0,&ds18b20RT);
  76   1      }
  77          
  78          
  79          void jiemian(void)
  80          {
  81   1          GotoXY(0,0);    //设置显示数据地址  列位，行 
  82   1          Print("RealTimeT:      ");
  83   1          GotoXY(0,1);    //设置显示数据地址  列位，行
  84   1          Print("Max:    Min:    ");
  85   1      
  86   1      }
  87          
  88          void jiemian1(void)
  89          {
  90   1              GotoXY(0,0);    //设置显示数据地址  列位，行 
  91   1              Print("SET Alarm Value ");    //PM2.5空气质量指数
  92   1              GotoXY(0,1);    //设置显示数据地址  列位，行
  93   1          Print("Max:    Min:    ");
  94   1      
  95   1      
  96   1      }
  97          
  98          void key()
  99          {
 100   1       if(!SET_key)   
 101   1       {
 102   2       delay_ms(20);
 103   2         if(!SET_key)
 104   2         {
 105   3           set_flag++;
 106   3           switch(set_flag)
 107   3           {
 108   4             case 1:
 109   4               jiemian1();
 110   4                     wendu_s[0]=wen_ds/10+0x30;
 111   4                     wendu_s[1]=wen_ds%10+0x30;
 112   4                     wendu_s[2]='\0';
 113   4                    LCD1602_Print(5,1,&wendu_s);
 114   4                    wendu_s[0]=wen_dx/10+0x30;
 115   4                    wendu_s[1]=wen_dx%10+0x30;
 116   4                    wendu_s[2]='\0';
C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 3   

 117   4                    LCD1602_Print(13,1,&wendu_x);
 118   4                    LCD1602_SetDisplay(LCD1602_open|LCD1602_cursor|LCD1602_flash);
 119   4                    GotoXY(6,1);
 120   4             break;
 121   4             case 2:GotoXY(14,1);
 122   4             break;
 123   4             default : set_flag=0;
 124   4                      write_eeprom();
 125   4                      jiemian();  
 126   4                      wendu_ds();
 127   4                      Ds18b20Read();
 128   4                      LCD1602_SetDisplay(LCD1602_open|LCD1602_NO_cursor|LCD1602_NO_flash);
 129   4             break;  
 130   4           } 
 131   3         }
 132   2         while(!SET_key);
 133   2       }
 134   1       
 135   1       
 136   1       if(!ADD_key)
 137   1       {
 138   2         delay_ms(20);
 139   2         if(!ADD_key&&set_flag!=0)
 140   2         {
 141   3         switch(set_flag)
 142   3         {
 143   4           case 1: wen_ds++;
 144   4           if(wen_ds>99)
 145   4             wen_ds=0;
 146   4           if(wen_ds<=wen_dx)
 147   4             wen_ds=wen_dx+1;
 148   4             wendu_s[0]=wen_ds/10+0x30;
 149   4             wendu_s[1]=wen_ds%10+0x30;
 150   4             wendu_s[2]='\0';
 151   4             LCD1602_Print(5,1,&wendu_s);
 152   4             GotoXY(6,1);
 153   4            break;    
 154   4           case 2: wen_dx++;
 155   4           if(wen_dx>99)
 156   4             wen_dx=0;
 157   4           if(wen_ds<=wen_dx)
 158   4             wen_dx=wen_ds-1;
 159   4             wendu_x[0]=wen_dx/10+0x30;
 160   4             wendu_x[1]=wen_dx%10+0x30;
 161   4             wendu_x[2]='\0';
 162   4             LCD1602_Print(13,1,&wendu_x);
 163   4             GotoXY(14,1);
 164   4            break;    
 165   4           }
 166   3         
 167   3         }
 168   2           while(!ADD_key); 
 169   2       
 170   2       
 171   2       } 
 172   1        if(!DEC_key)
 173   1        {
 174   2          delay_ms(20);
 175   2        if(!DEC_key&&set_flag!=0)
 176   2        {
 177   3        switch(set_flag)
 178   3         {
C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 4   

 179   4         case 1: wen_ds--;
 180   4           if(wen_ds>99)
 181   4             wen_ds=0;
 182   4           if(wen_ds<=wen_dx)
 183   4             wen_ds=wen_dx+1;
 184   4             wendu_s[0]=wen_ds/10+0x30;
 185   4             wendu_s[1]=wen_ds%10+0x30;
 186   4             wendu_s[2]='\0';
 187   4             LCD1602_Print(5,1,&wendu_s);
 188   4             GotoXY(6,1);
 189   4            break;    
 190   4           case 2: wen_dx--;
 191   4           if(wen_dx>99)
 192   4             wen_dx=0;
 193   4           if(wen_ds<=wen_dx)
 194   4             wen_dx=wen_ds-1;
 195   4             wendu_x[0]=wen_dx/10+0x30;
 196   4             wendu_x[1]=wen_dx%10+0x30;
 197   4             wendu_x[2]='\0';
 198   4             LCD1602_Print(13,1,&wendu_x);
 199   4             GotoXY(14,1);
 200   4            break;    
 201   4         
 202   4         
 203   4         while(!DEC_key); 
 204   4         }
 205   3          
 206   3        }
 207   2        
 208   2        }
 209   1       
 210   1       }
 211          
 212          void Timer0Init(void)   //100微秒@11.0592MHz
 213          {
 214   1        
 215   1        TMOD=0x01;  //设置定时器模式
 216   1        TL0 = 0x3c;   //设置定时初值
 217   1        TH0 = 0xb0;   //设置定时初值
 218   1        TR0 = 0;    //关闭定时器0
 219   1      }
 220          
 221           
 222           
 223          void timer0(void) interrupt 1
 224          {
 225   1      
 226   1        TL0 = 0xcd;
 227   1        TH0 = 0xf8;   
 228   1          j++;
 229   1          if(j==10)
 230   1        {
 231   2          j=0;
 232   2          beep_flag=~beep_flag;
 233   2        }
 234   1      } 
 235           
 236           
 237          void main()
 238            {
 239   1        
 240   1          LCD1602_init();  //LCD初始化
C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 5   

 241   1          init_eeprom();    //初始化数据 
 242   1          read_eeprom();    //将保存到EEPROM中的数据读出
 243   1          jiemian();         //显示温度
 244   1          Ds18b20Read();
 245   1          wendu_ds();       
 246   1          set_flag=0;    //设置键标志位清零
 247   1          alarm_flag=0;  //报警标志标志位清零
 248   1          beep_flag=1;   //蜂鸣标志标志位清零
 249   1          alarmMax_flag=0;
 250   1          alarmMin_flag=0;
 251   1          beep=1;       //关蜂鸣器
 252   1          Feng=1;       //关风扇
 253   1          Jiare=1;      //关加热
 254   1      
 255   1          Timer0Init(); //定时器0初始化
 256   1          
 257   1          EA=1;
 258   1          ET0=1;
 259   1          
 260   1          
 261   1      
 262   1      
 263   1      
 264   1      
 265   1      
 266   1          
 267   1          while(1)
 268   1            {
 269   2           
 270   2            if(set_flag==0)
 271   2            {         
 272   3              Ds18b20Read();
 273   3              wendu_ds(); 
 274   3            
 275   3            }
 276   2              
 277   2            key();
 278   2            
 279   2            if(set_flag==0)
 280   2            {
 281   3              if(wendus[0]<ds18b20[0])
 282   3              {
 283   4                TR0=1;
 284   4                alarmMax_flag=1;
 285   4                
 286   4              }else{    
 287   4              alarmMax_flag=0;
 288   4              }
 289   3              
 290   3              if(wendux[0]>ds18b20[0])
 291   3              {
 292   4                TR0=1;
 293   4                alarmMin_flag=1;
 294   4              
 295   4              }else{      
 296   4              alarmMin_flag=0;                
 297   4              }
 298   3              
 299   3              if(alarmMax_flag==0&&alarmMin_flag==0)
 300   3              {
 301   4                TR0=0;
 302   4                beep=1;       //关蜂鸣器
C51 COMPILER V9.59.0.0   MAIN                                                              05/14/2019 21:32:34 PAGE 6   

 303   4                Feng=1;       //关风扇
 304   4                Jiare=1;      //关加热
 305   4      
 306   4              }
 307   3              
 308   3              if(alarmMax_flag==1)
 309   3              {
 310   4                Feng=0;   //开风扇
 311   4                
 312   4              }
 313   3            
 314   3            if(alarmMin_flag==1)
 315   3              {
 316   4                Jiare=0;   //开加热
 317   4                
 318   4              }
 319   3            
 320   3            
 321   3            
 322   3            if(TR0==1)
 323   3             {
 324   4              if(beep_flag==1){ 
 325   5                beep=0;
 326   5              }else{
 327   5               beep=1;
 328   5              }  
 329   4             
 330   4             }  
 331   3            
 332   3            
 333   3            }
 334   2              
 335   2          
 336   2          }
 337   1      
 338   1      
 339   1       }
 340          
 341          
 342          
 343          
 344          
 345          
 346          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1714    ----
   CONSTANT SIZE    =     51    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
